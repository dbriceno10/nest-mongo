SEPARACI√ìN DE RESPONSABILIDADES

NestJS le da mucha importancia a los Principios SOLID en el desarrollo de software para mantener las buenas pr√°cticas de codificaci√≥n. Una de ellas es la responsabilidad √∫nica.

Qu√© es la responsabilidad √∫nica
La S de SOLID hace referencia a ‚ÄúSingle Responsibility‚Äù y recomienda que cada pieza de software debe tener una √∫nica funci√≥n. Por ejemplo, un controlador de productos no deber√≠a encargarse de categor√≠as o de usuarios. Se debe crear un controlador para cada entidad que la aplicaci√≥n necesite.

Lo mismo ocurre con los m√©todos. Un m√©todo para la obtenci√≥n de datos solo debe realizar dicha acci√≥n y no estar actualizando o manipulando los datos de otra manera.

Responsabilidades en NestJS
En NestJS, una buena pr√°ctica es crear un directorio llamado controllers donde se agrupar√°n todos los controladores que tu aplicaci√≥n necesite. Ese ya es un buen paso para mantener el orden en tu proyecto.

Ap√≥yate del CLI de NestJS para autogenerar c√≥digo r√°pidamente con el comando nest generate controller <controller-name> o en su forma corta nest g co <controller-name>.

Es una buena forma de comenzar a seguir las buenas pr√°cticas a la hora de escribir c√≥digo y estructurar una aplicaci√≥n.

Controllers y responsabilidades
nest g cor controllers/categories --flat
src/controllers/categories.controller.ts

import { Controller, Get, Param } from '@nestjs/common';

@Controller('categories') // üëà Route
export class CategoriesController {

  @Get(':id/products/:productId')
  getCategory(
    @Param('productId') productId: string,
    @Param('id') id: string
  ) {
    return `product ${productId} and ${id}`;
  }
}
nest g co controllers/products --flat
src/controllers/products.controller.ts


import { Controller, Get, Query, Param } from '@nestjs/common';

@Controller('products') // üëà Route
export class ProductsController {
  @Get()
  getProducts(
    @Query('limit') limit = 100,
    @Query('offset') offset = 0,
    @Query('brand') brand: string,
  ) {
    return `products limit=> ${limit} offset=> ${offset} brand=> ${brand}`;
  }

  @Get('filter')
  getProductFilter() {
    return `yo soy un filter`;
  }

  @Get(':productId')
  getProduct(@Param('productId') productId: string) {
    return `product ${productId}`;
  }
}
src/app.module.ts

import { Module } from '@nestjs/common';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { ProductsController } from './controllers/products.controller';
import { CategoriesController } from './controllers/categories.controller';

@Module({
  imports: [],
  controllers: [
   AppController,
   ProductsController, // üëà New controller
   CategoriesController  // üëà New controller
  ],
  providers: [AppService],
})
export class AppModule {}
Contribuci√≥n creada por: Kevin Fiorentino.
