C√ìDIGOS DE DE ESTADO O HTTP RESPONSE CODE STATUS

El protocolo HTTP tiene estandarizado una lista de c√≥digos de estado que indican los tipos de respuesta que las API deben enviar dependiendo la situaci√≥n. Como profesional en el desarrollo de software, debes conocerlos y diferenciarlos.

Cu√°les son los c√≥digos HTTP
Hay cinco familias de c√≥digos de estado HTTP que tienes que utilizar apropiadamente para que tus APIs informen correctamente la situaci√≥n de la solicitud.

Estados informativos (100‚Äì199)
Estados de √©xito (200‚Äì299)
Estados de redirecci√≥n (300‚Äì399)
Estados de error del cliente (400‚Äì499)
Estados de error del servidor (500‚Äì599)
C√≥mo manejar los c√≥digos de estado HTTP con NestJS
En NestJS, puedes manejar los c√≥digos de estado HTTP importando el decorador HttpCode y el enumerado HttpStatus desde @nestjs/common.

El primero te servir√° para indicar cu√°l ser√° el c√≥digo de estado HTTP que un endpoint tiene que devolver; el segundo para ayudarte por si no recuerdas qu√© c√≥digo pertenece a cada tipo de respuesta.

import { Controller, HttpCode, HttpStatus } from '@nestjs/common';

@Get('product/:idProduct')
@HttpCode(HttpStatus.OK)
getProduct2(@Param('idProduct') idProduct: string): string {
    return `Producto id: ${idProduct}`;
}

@Post('product')
@HttpCode(HttpStatus.CREATED)
createProducto(@Body() body: any): any {
    return {
      name: body.name,
      price: body.price
    };
}
El enumerado HttpStatus.OK indica c√≥digo de estado 200 que es el que suele devolver por defecto todos los endpoints cuando la operaci√≥n sale exitosamente. Los endpoints POST suelen devolver HttpStatus.CREATED o c√≥digo 201 para indicar la creaci√≥n exitosa del registro.

src/controllers/products.controller.ts

import { ..., HttpStatus, HttpCode, Res } from '@nestjs/common';
import { Response } from 'express';

@Controller('products')
export class ProductsController {
  ...
  @Get(':productId')
  @HttpCode(HttpStatus.ACCEPTED) // üëà Using decorator
  getOne(
    @Res() response: Response,
    @Param('productId') productId: string
  ) {
    response.status(200).send({...}); // üëà Using express directly
  }
}
Contribuci√≥n creada por: Kevin Fiorentino.
